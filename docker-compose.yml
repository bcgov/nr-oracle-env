x-var:
  - &ORA_USER
    THE
  - &ORA_PASSWORD
    default
  - &ORA_DATABASE
    DBDOCK_STRUCT_01
  - &ORA_HOST
    oracle
  - &ORA_PORT
    1522
  - &ORA_FLYWAY_URL_TEST
    jdbc:oracle:thin:@//oracle-test:1521/DBDOCK_TEST_01
  - &ORA_HOST_TEST
    oracle-test
  - &ORA_PORT_TEST
    1523
  - &ORA_DATABASE_TEST
    DBDOCK_TEST_01

x-oracle-vars: &oracle-vars
  ORACLE_DATABASE: *ORA_DATABASE
  ORACLE_PASSWORD: *ORA_PASSWORD
  ORACLE_HOST: *ORA_HOST
  APP_USER: *ORA_USER
  APP_USER_PASSWORD: *ORA_PASSWORD

x-oracle-vars-test: &oracle-vars-test
  ORACLE_DATABASE: *ORA_DATABASE_TEST
  ORACLE_PASSWORD: *ORA_PASSWORD
  ORACLE_HOST: *ORA_HOST_TEST
  APP_USER: *ORA_USER
  APP_USER_PASSWORD: *ORA_PASSWORD
  FLYWAY_URL: *ORA_FLYWAY_URL_TEST

services:
  # Name of the Docker Compose service
  oracle:
    # Docker Hub image (feel free to change the tag "latest" to any other available one)
    image: gvenzl/oracle-free:latest
    # Forward Oracle port to localhost
    container_name: oracle
    ports:
      - "1522:1521"
    # Provide passwords and other environment variables to the container
    environment:
      <<: *oracle-vars
    # Customize healthcheck script options for startup
    healthcheck:
      test: ["CMD", "/opt/oracle/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 10
    # Mount a local SQL file to initialize your schema at startup
    volumes:
      - ./docker_comp_ora/dbdock_struct_01:/container-entrypoint-initdb.d # mount the init scripts
      - oracle-data-struct:/opt/oracle/oradata  # Mount the volume to the Oracle data directory
      - ./docker_data_pump_file/dbp01-31-10-24.dmp:/dpdata/dump_file.dmp # mount the actual dump file

  oracle-dp-import:
    image: gvenzl/oracle-free:latest
    container_name: oracle-dp-import
    # Provide passwords and other environment variables to the container
    environment:
      <<: *oracle-vars-test
    restart: "no"
    entrypoint: ["/bin/bash", "/opt/oracle/scripts/run_data_pump_import.sh"]
    volumes:
      - ./docker_comp_ora/data_pump_import/run_data_pump_import.sh:/opt/oracle/scripts/run_data_pump_import.sh
    depends_on:
      oracle:
        condition: service_healthy

  oracle-test:
    # Docker Hub image (feel free to change the tag "latest" to any other available one)
    image: gvenzl/oracle-free:latest
    # Forward Oracle port to localhost
    container_name: oracle-test
    ports:
      - "1523:1521"
    # Provide passwords and other environment variables to the container
    environment:
      <<: *oracle-vars-test
    # Customize healthcheck script options for startup
    healthcheck:
      test: ["CMD", "/opt/oracle/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 10
    # Mount a local SQL file to initialize your schema at startup
    volumes:
      - ./docker_comp_ora/dbdock_test_01/init_scripts:/container-entrypoint-initdb.d # mount the init scripts
      - ./docker_comp_ora/dbdock_test_01/start_scripts:/container-entrypoint-startdb.d # mount the init scripts
      - oracle-test-data-struct:/opt/oracle/oradata  # Mount the volume to the Oracle data directory

  oracle-migrations-test:
    image: flyway/flyway:10-alpine
    container_name: oracle-migrations-test
    command: info migrate info
    volumes:
      # - "./data-query-tool/data/migrations:/flyway/sql:ro"
       - "./project_specific/consep/migrations:/flyway/sql:ro"
    environment:
      <<: *oracle-vars-test
      FLYWAY_USER: CONSEP
      FLYWAY_PASSWORD: *ORA_PASSWORD
      FLYWAY_DEFAULT_SCHEMA: CONSEP
      FLYWAY_BASELINE_ON_MIGRATE: true
    depends_on:
      oracle-test:
        condition: service_healthy


volumes:
  oracle-data-struct:
  oracle-test-data-struct:
