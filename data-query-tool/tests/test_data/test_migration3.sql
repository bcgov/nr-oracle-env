-- THE.ORG_UNIT definition
CREATE TABLE THE.ORG_UNIT (
	ORG_UNIT_NO NUMBER(10,0),
	ORG_UNIT_CODE VARCHAR2(6),
	ORG_UNIT_NAME VARCHAR2(100),
	LOCATION_CODE VARCHAR2(3),
	AREA_CODE VARCHAR2(3),
	TELEPHONE_NO VARCHAR2(7),
	ORG_LEVEL_CODE VARCHAR2(1),
	OFFICE_NAME_CODE VARCHAR2(2),
	ROLLUP_REGION_NO NUMBER(10,0),
	ROLLUP_REGION_CODE VARCHAR2(6),
	ROLLUP_DIST_NO NUMBER(10,0),
	ROLLUP_DIST_CODE VARCHAR2(6),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT ORG_UNIT_PK PRIMARY KEY (ORG_UNIT_NO),
	CONSTRAINT SYS_C0035144 CHECK ("ORG_UNIT_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035146 CHECK ("ORG_UNIT_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035148 CHECK ("ORG_UNIT_NAME" IS NOT NULL),
	CONSTRAINT SYS_C0035150 CHECK ("LOCATION_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035152 CHECK ("AREA_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035154 CHECK ("TELEPHONE_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035156 CHECK ("ORG_LEVEL_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035158 CHECK ("OFFICE_NAME_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035160 CHECK ("ROLLUP_REGION_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035162 CHECK ("ROLLUP_REGION_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035164 CHECK ("ROLLUP_DIST_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035166 CHECK ("ROLLUP_DIST_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035168 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0035169 CHECK ("EXPIRY_DATE" IS NOT NULL)
);
CREATE UNIQUE INDEX "I2$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_CODE,ORG_UNIT_NO);
CREATE UNIQUE INDEX "I3$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_CODE);
CREATE UNIQUE INDEX "I4$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_NO,ORG_UNIT_CODE,ORG_UNIT_NAME,LOCATION_CODE,TELEPHONE_NO,ORG_LEVEL_CODE,OFFICE_NAME_CODE);
CREATE INDEX "I5$_ORG_UNIT" ON THE.ORG_UNIT (ROLLUP_DIST_CODE,ROLLUP_REGION_CODE);
CREATE INDEX "I6$_ORG_UNIT" ON THE.ORG_UNIT (ROLLUP_REGION_NO,ROLLUP_DIST_NO);
CREATE INDEX "I7$_ORG_UNIT" ON THE.ORG_UNIT (ROLLUP_REGION_CODE,ROLLUP_DIST_CODE);
CREATE UNIQUE INDEX "I8$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_NO,ORG_UNIT_CODE);
CREATE UNIQUE INDEX "I9$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_CODE,ORG_LEVEL_CODE,ORG_UNIT_NO,ORG_UNIT_NAME);
-- CREATE UNIQUE INDEX ORG_UNIT_PK ON THE.ORG_UNIT (ORG_UNIT_NO);


CREATE TABLE THE.BEC_VERSION_CONTROL (
	BEC_VERSION_ID NUMBER(10,0),
	BEC_VERSION NUMBER(5,2),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	CONSTRAINT BVC_BV_UK UNIQUE (BEC_VERSION),
	CONSTRAINT BVC_PK PRIMARY KEY (BEC_VERSION_ID),
	CONSTRAINT SYS_C0010229 CHECK ("BEC_VERSION_ID" IS NOT NULL),
	CONSTRAINT SYS_C0010230 CHECK ("BEC_VERSION" IS NOT NULL),
	CONSTRAINT SYS_C0010231 CHECK ("EFFECTIVE_DATE" IS NOT NULL)
);
-- CREATE UNIQUE INDEX BVC_BV_UK ON THE.BEC_VERSION_CONTROL (BEC_VERSION);
-- CREATE UNIQUE INDEX BVC_PK ON THE.BEC_VERSION_CONTROL (BEC_VERSION_ID);


-- THE.CONE_COLLECTION_METHOD_CODE definition
CREATE TABLE THE.CONE_COLLECTION_METHOD_CODE (
	CONE_COLLECTION_METHOD_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT CONE_COLLECTION_METHOD_CODE_PK PRIMARY KEY (CONE_COLLECTION_METHOD_CODE),
	CONSTRAINT SYS_C0026715 CHECK ("CONE_COLLECTION_METHOD_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0026716 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0026717 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026718 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026720 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX CONE_COLLECTION_METHOD_CODE_PK ON THE.CONE_COLLECTION_METHOD_CODE (CONE_COLLECTION_METHOD_CODE);


-- THE.CLIENT_ID_TYPE_CODE definition
CREATE TABLE THE.CLIENT_ID_TYPE_CODE (
	CLIENT_ID_TYPE_CODE VARCHAR2(4),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT CITC_PK PRIMARY KEY (CLIENT_ID_TYPE_CODE),
	CONSTRAINT SYS_C0019592 CHECK ("CLIENT_ID_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0019596 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0019597 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019598 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019599 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX CITC_PK ON THE.CLIENT_ID_TYPE_CODE (CLIENT_ID_TYPE_CODE);

-- THE.CLIENT_STATUS_CODE definition
CREATE TABLE THE.CLIENT_STATUS_CODE (
	CLIENT_STATUS_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT CSTC_PK PRIMARY KEY (CLIENT_STATUS_CODE),
	CONSTRAINT SYS_C0019774 CHECK ("CLIENT_STATUS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0019775 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0019776 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019777 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019778 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX CSTC_PK ON THE.CLIENT_STATUS_CODE (CLIENT_STATUS_CODE);

-- THE.REGISTRY_COMPANY_TYPE_CODE definition
CREATE TABLE THE.REGISTRY_COMPANY_TYPE_CODE (
	REGISTRY_COMPANY_TYPE_CODE VARCHAR2(4),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT CRCTC_PK PRIMARY KEY (REGISTRY_COMPANY_TYPE_CODE),
	CONSTRAINT SYS_C0019621 CHECK ("REGISTRY_COMPANY_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0019624 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0019627 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019629 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019631 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX CRCTC_PK ON THE.REGISTRY_COMPANY_TYPE_CODE (REGISTRY_COMPANY_TYPE_CODE);

-- THE.CLIENT_TYPE_CODE definition
CREATE TABLE THE.CLIENT_TYPE_CODE (
	CLIENT_TYPE_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT CTCD_PK PRIMARY KEY (CLIENT_TYPE_CODE),
	CONSTRAINT SYS_C0019539 CHECK ("CLIENT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0019541 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0019544 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019545 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0019546 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX CTCD_PK ON THE.CLIENT_TYPE_CODE (CLIENT_TYPE_CODE);

-- THE.CLIENT_TYPE_COMPANY_XREF definition
CREATE TABLE THE.CLIENT_TYPE_COMPANY_XREF (
	CLIENT_TYPE_CODE VARCHAR2(1),
	REGISTRY_COMPANY_TYPE_CODE VARCHAR2(4),
	ADD_USERID VARCHAR2(30),
	ADD_TIMESTAMP DATE,
	UPDATE_USERID VARCHAR2(30),
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT CTCX_PK PRIMARY KEY (CLIENT_TYPE_CODE,REGISTRY_COMPANY_TYPE_CODE),
	CONSTRAINT SYS_C0019494 CHECK ("CLIENT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0019495 CHECK ("REGISTRY_COMPANY_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0019496 CHECK ("ADD_USERID" IS NOT NULL),
	CONSTRAINT SYS_C0019497 CHECK ("ADD_TIMESTAMP" IS NOT NULL),
	CONSTRAINT SYS_C0019498 CHECK ("UPDATE_USERID" IS NOT NULL),
	CONSTRAINT SYS_C0019501 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
CREATE INDEX CTCX_CRCTC_FK_I ON THE.CLIENT_TYPE_COMPANY_XREF (REGISTRY_COMPANY_TYPE_CODE);
CREATE INDEX CTCX_CTC_FK_I ON THE.CLIENT_TYPE_COMPANY_XREF (CLIENT_TYPE_CODE);
-- CREATE UNIQUE INDEX CTCX_PK ON THE.CLIENT_TYPE_COMPANY_XREF (CLIENT_TYPE_CODE,REGISTRY_COMPANY_TYPE_CODE);


-- THE.CLIENT_TYPE_COMPANY_XREF foreign keys
ALTER TABLE THE.CLIENT_TYPE_COMPANY_XREF ADD CONSTRAINT CTCX_CRCTC_FK FOREIGN KEY (REGISTRY_COMPANY_TYPE_CODE) REFERENCES THE.REGISTRY_COMPANY_TYPE_CODE(REGISTRY_COMPANY_TYPE_CODE);
ALTER TABLE THE.CLIENT_TYPE_COMPANY_XREF ADD CONSTRAINT CTCX_CTC_FK FOREIGN KEY (CLIENT_TYPE_CODE) REFERENCES THE.CLIENT_TYPE_CODE(CLIENT_TYPE_CODE);

-- THE.FOREST_CLIENT definition
CREATE TABLE THE.FOREST_CLIENT (
	CLIENT_NUMBER VARCHAR2(8),
	CLIENT_NAME VARCHAR2(60),
	LEGAL_FIRST_NAME VARCHAR2(30),
	LEGAL_MIDDLE_NAME VARCHAR2(30),
	CLIENT_STATUS_CODE VARCHAR2(3),
	CLIENT_TYPE_CODE VARCHAR2(1),
	BIRTHDATE DATE,
	CLIENT_ID_TYPE_CODE VARCHAR2(4),
	CLIENT_IDENTIFICATION VARCHAR2(40),
	REGISTRY_COMPANY_TYPE_CODE VARCHAR2(4),
	CORP_REGN_NMBR VARCHAR2(9),
	CLIENT_ACRONYM VARCHAR2(8),
	WCB_FIRM_NUMBER VARCHAR2(6),
	OCG_SUPPLIER_NMBR VARCHAR2(10),
	CLIENT_COMMENT VARCHAR2(4000),
	ADD_TIMESTAMP DATE,
	ADD_USERID VARCHAR2(30),
	ADD_ORG_UNIT NUMBER(10,0),
	UPDATE_TIMESTAMP DATE,
	UPDATE_USERID VARCHAR2(30),
	UPDATE_ORG_UNIT NUMBER(10,0),
	REVISION_COUNT NUMBER(5,0),
	CONSTRAINT FOREST_CLIENT_PK PRIMARY KEY (CLIENT_NUMBER),
	CONSTRAINT SYS_C0028487 CHECK ("CLIENT_NUMBER" IS NOT NULL),
	CONSTRAINT SYS_C0028488 CHECK ("CLIENT_NAME" IS NOT NULL),
	CONSTRAINT SYS_C0028489 CHECK ("CLIENT_STATUS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0028490 CHECK ("CLIENT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0028491 CHECK ("ADD_TIMESTAMP" IS NOT NULL),
	CONSTRAINT SYS_C0028492 CHECK ("ADD_USERID" IS NOT NULL),
	CONSTRAINT SYS_C0028493 CHECK ("ADD_ORG_UNIT" IS NOT NULL),
	CONSTRAINT SYS_C0028494 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL),
	CONSTRAINT SYS_C0028495 CHECK ("UPDATE_USERID" IS NOT NULL),
	CONSTRAINT SYS_C0028496 CHECK ("UPDATE_ORG_UNIT" IS NOT NULL),
	CONSTRAINT SYS_C0028497 CHECK ("REVISION_COUNT" IS NOT NULL)
);
CREATE UNIQUE INDEX FC_ACRONYM_I ON THE.FOREST_CLIENT (CLIENT_ACRONYM);
CREATE INDEX FC_CITC_FK_I ON THE.FOREST_CLIENT (CLIENT_ID_TYPE_CODE);
CREATE INDEX FC_CSC_FK_I ON THE.FOREST_CLIENT (CLIENT_STATUS_CODE);
CREATE INDEX FC_CTCX_FK_I ON THE.FOREST_CLIENT (CLIENT_TYPE_CODE,REGISTRY_COMPANY_TYPE_CODE);
CREATE INDEX FC_OU_FK_I ON THE.FOREST_CLIENT (ADD_ORG_UNIT);
CREATE INDEX FC_OU_IS_UPDATED_BY_FK_I ON THE.FOREST_CLIENT (UPDATE_ORG_UNIT);
-- CREATE UNIQUE INDEX FOREST_CLIENT_PK ON THE.FOREST_CLIENT (CLIENT_NUMBER);
CREATE UNIQUE INDEX "I2$_FOREST_CLIENT" ON THE.FOREST_CLIENT (CLIENT_NAME,LEGAL_FIRST_NAME,LEGAL_MIDDLE_NAME,CLIENT_NUMBER);
CREATE INDEX "I4$_FOREST_CLIENT" ON THE.FOREST_CLIENT (OCG_SUPPLIER_NMBR);
CREATE INDEX "I5$_FOREST_CLIENT" ON THE.FOREST_CLIENT (CORP_REGN_NMBR);

-- THE.FOREST_CLIENT foreign keys
ALTER TABLE THE.FOREST_CLIENT ADD CONSTRAINT FC_CITC_FK FOREIGN KEY (CLIENT_ID_TYPE_CODE) REFERENCES THE.CLIENT_ID_TYPE_CODE(CLIENT_ID_TYPE_CODE);
ALTER TABLE THE.FOREST_CLIENT ADD CONSTRAINT FC_CSC_FK FOREIGN KEY (CLIENT_STATUS_CODE) REFERENCES THE.CLIENT_STATUS_CODE(CLIENT_STATUS_CODE);
ALTER TABLE THE.FOREST_CLIENT ADD CONSTRAINT FC_CTCX_FK FOREIGN KEY (CLIENT_TYPE_CODE,REGISTRY_COMPANY_TYPE_CODE) REFERENCES THE.CLIENT_TYPE_COMPANY_XREF(CLIENT_TYPE_CODE,REGISTRY_COMPANY_TYPE_CODE);
ALTER TABLE THE.FOREST_CLIENT ADD CONSTRAINT FC_OU_FK FOREIGN KEY (ADD_ORG_UNIT) REFERENCES THE.ORG_UNIT(ORG_UNIT_NO);
ALTER TABLE THE.FOREST_CLIENT ADD CONSTRAINT FC_OU_IS_UPDATED_BY_FK FOREIGN KEY (UPDATE_ORG_UNIT) REFERENCES THE.ORG_UNIT(ORG_UNIT_NO);

-- THE.CLIENT_LOCATION definition
CREATE TABLE THE.CLIENT_LOCATION (
	CLIENT_NUMBER VARCHAR2(8),
	CLIENT_LOCN_CODE VARCHAR2(2),
	CLIENT_LOCN_NAME VARCHAR2(40),
	HDBS_COMPANY_CODE VARCHAR2(5),
	ADDRESS_1 VARCHAR2(40),
	ADDRESS_2 VARCHAR2(40),
	ADDRESS_3 VARCHAR2(40),
	CITY VARCHAR2(30),
	PROVINCE VARCHAR2(50),
	POSTAL_CODE VARCHAR2(10),
	COUNTRY VARCHAR2(50),
	BUSINESS_PHONE VARCHAR2(10),
	HOME_PHONE VARCHAR2(10),
	CELL_PHONE VARCHAR2(10),
	FAX_NUMBER VARCHAR2(10),
	EMAIL_ADDRESS VARCHAR2(128),
	LOCN_EXPIRED_IND VARCHAR2(1),
	RETURNED_MAIL_DATE DATE,
	TRUST_LOCATION_IND VARCHAR2(1),
	CLI_LOCN_COMMENT VARCHAR2(4000),
	UPDATE_TIMESTAMP DATE,
	UPDATE_USERID VARCHAR2(30),
	UPDATE_ORG_UNIT NUMBER(10,0),
	ADD_TIMESTAMP DATE,
	ADD_USERID VARCHAR2(30),
	ADD_ORG_UNIT NUMBER(10,0),
	REVISION_COUNT NUMBER(5,0),
	CONSTRAINT "BIN$A8NnKNSZAszgVAAQ4CNh2g==$0" CHECK ("UPDATE_USERID" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSaAszgVAAQ4CNh2g==$0" CHECK ("UPDATE_ORG_UNIT" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSbAszgVAAQ4CNh2g==$0" CHECK ("ADD_TIMESTAMP" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNScAszgVAAQ4CNh2g==$0" CHECK ("ADD_USERID" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSdAszgVAAQ4CNh2g==$0" CHECK ("ADD_ORG_UNIT" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSeAszgVAAQ4CNh2g==$0" CHECK ("REVISION_COUNT" IS NOT NULL),
	CONSTRAINT CLIENT_LOCATION_PK PRIMARY KEY (CLIENT_NUMBER,CLIENT_LOCN_CODE),
	CONSTRAINT SYS_C0028439 CHECK ("CLIENT_NUMBER" IS NOT NULL),
	CONSTRAINT SYS_C0028440 CHECK ("CLIENT_LOCN_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0028441 CHECK ("ADDRESS_1" IS NOT NULL),
	CONSTRAINT SYS_C0028442 CHECK ("CITY" IS NOT NULL),
	CONSTRAINT SYS_C0028443 CHECK ("COUNTRY" IS NOT NULL),
	CONSTRAINT SYS_C0028444 CHECK ("LOCN_EXPIRED_IND" IS NOT NULL),
	CONSTRAINT SYS_C0028445 CHECK ("TRUST_LOCATION_IND" IS NOT NULL),
	CONSTRAINT SYS_C0028446 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX CLIENT_LOCATION_PK ON THE.CLIENT_LOCATION (CLIENT_NUMBER,CLIENT_LOCN_CODE);
CREATE INDEX CL_FC_FK_I ON THE.CLIENT_LOCATION (CLIENT_NUMBER);
CREATE INDEX CL_OU_FK_I ON THE.CLIENT_LOCATION (UPDATE_ORG_UNIT);
CREATE INDEX CL_OU_IS_CREATED_BY_FK_I ON THE.CLIENT_LOCATION (ADD_ORG_UNIT);
CREATE INDEX "I2$_CLIENT_LOCATION" ON THE.CLIENT_LOCATION (HDBS_COMPANY_CODE);

-- THE.CLIENT_LOCATION foreign keys
ALTER TABLE THE.CLIENT_LOCATION ADD CONSTRAINT CL_FC_FK FOREIGN KEY (CLIENT_NUMBER) REFERENCES THE.FOREST_CLIENT(CLIENT_NUMBER);
ALTER TABLE THE.CLIENT_LOCATION ADD CONSTRAINT CL_OU_FK FOREIGN KEY (UPDATE_ORG_UNIT) REFERENCES THE.ORG_UNIT(ORG_UNIT_NO);
ALTER TABLE THE.CLIENT_LOCATION ADD CONSTRAINT CL_OU_IS_CREATED_BY_FK FOREIGN KEY (ADD_ORG_UNIT) REFERENCES THE.ORG_UNIT(ORG_UNIT_NO);


-- THE.COLLECTION_LONGITUDE_CODE definition
CREATE TABLE THE.COLLECTION_LONGITUDE_CODE (
	COLLECTION_LONGITUDE_CODE VARCHAR2(2),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT COLLECTION_LONGITUDE_CODE_PK PRIMARY KEY (COLLECTION_LONGITUDE_CODE),
	CONSTRAINT SYS_C0027387 CHECK ("COLLECTION_LONGITUDE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0027388 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0027389 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027390 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027391 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX COLLECTION_LONGITUDE_CODE_PK ON THE.COLLECTION_LONGITUDE_CODE (COLLECTION_LONGITUDE_CODE);

-- THE.COLLECTION_LATITUDE_CODE definition
CREATE TABLE THE.COLLECTION_LATITUDE_CODE (
	COLLECTION_LATITUDE_CODE VARCHAR2(2),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT COLLECTION_LATITUDE_CODE_PK PRIMARY KEY (COLLECTION_LATITUDE_CODE),
	CONSTRAINT SYS_C0027254 CHECK ("COLLECTION_LATITUDE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0027255 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0027256 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027257 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027258 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX COLLECTION_LATITUDE_CODE_PK ON THE.COLLECTION_LATITUDE_CODE (COLLECTION_LATITUDE_CODE);

-- THE.COLLECTION_SOURCE_CODE definition
CREATE TABLE THE.COLLECTION_SOURCE_CODE (
	COLLECTION_SOURCE_CODE VARCHAR2(2),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT COLLECTION_SOURCE_CODE_PK PRIMARY KEY (COLLECTION_SOURCE_CODE),
	CONSTRAINT SYS_C0027151 CHECK ("COLLECTION_SOURCE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0027152 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0027153 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027154 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027155 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX COLLECTION_SOURCE_CODE_PK ON THE.COLLECTION_SOURCE_CODE (COLLECTION_SOURCE_CODE);

-- THE.GENETIC_CLASS_CODE definition
CREATE TABLE THE.GENETIC_CLASS_CODE (
	GENETIC_CLASS_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT GENETIC_CLASS_CODE_PK PRIMARY KEY (GENETIC_CLASS_CODE),
	CONSTRAINT SYS_C0026518 CHECK ("GENETIC_CLASS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0026519 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0026520 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026521 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026522 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX GENETIC_CLASS_CODE_PK ON THE.GENETIC_CLASS_CODE (GENETIC_CLASS_CODE);

-- THE.GAMETIC_MTHD_CODE definition
CREATE TABLE THE.GAMETIC_MTHD_CODE (
	GAMETIC_MTHD_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT GCMC_PK PRIMARY KEY (GAMETIC_MTHD_CODE),
	CONSTRAINT SYS_C0028855 CHECK ("GAMETIC_MTHD_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0028856 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0028857 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0028858 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0028859 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX GCMC_PK ON THE.GAMETIC_MTHD_CODE (GAMETIC_MTHD_CODE);

-- THE.INTERM_FACILITY_CODE definition
CREATE TABLE THE.INTERM_FACILITY_CODE (
	INTERM_FACILITY_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT INTERM_FACILITY_CODE_PK PRIMARY KEY (INTERM_FACILITY_CODE),
	CONSTRAINT SYS_C0027096 CHECK ("INTERM_FACILITY_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0027097 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0027098 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027099 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027100 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX INTERM_FACILITY_CODE_PK ON THE.INTERM_FACILITY_CODE (INTERM_FACILITY_CODE);

-- THE.NAD_DATUM_CODE definition
CREATE TABLE THE.NAD_DATUM_CODE (
	NAD_DATUM_CODE VARCHAR2(2),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT NAD_DATUM_CODE_PK PRIMARY KEY (NAD_DATUM_CODE),
	CONSTRAINT SYS_C0026752 CHECK ("NAD_DATUM_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0026753 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0026754 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026755 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026756 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX NAD_DATUM_CODE_PK ON THE.NAD_DATUM_CODE (NAD_DATUM_CODE);

-- THE.NMBR_TREES_FROM_CODE definition
CREATE TABLE THE.NMBR_TREES_FROM_CODE (
	NMBR_TREES_FROM_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT NMBR_TREES_FROM_CODE_PK PRIMARY KEY (NMBR_TREES_FROM_CODE),
	CONSTRAINT SYS_C0027365 CHECK ("NMBR_TREES_FROM_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0027366 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0027367 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027368 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027369 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX NMBR_TREES_FROM_CODE_PK ON THE.NMBR_TREES_FROM_CODE (NMBR_TREES_FROM_CODE);

-- THE.ORCHARD definition
CREATE TABLE THE.ORCHARD (
	ORCHARD_ID VARCHAR2(3),
	ORCHARD_LOT_TYPE_CODE VARCHAR2(1),
	GENERATION_NUMBER NUMBER(3,2),
	CLIENT_NUMBER VARCHAR2(8),
	CLIENT_LOCN_CODE VARCHAR2(2),
	REVISION_COUNT NUMBER(5,0),
	ORCHARD_NAME VARCHAR2(30),
	ORCHARD_STAGE_CODE VARCHAR2(3),
	LICENSED_IND VARCHAR2(1),
	LICENSED_DATE DATE,
	LICENSE_RENEWAL_DATE DATE,
	VEGETATION_CODE VARCHAR2(8),
	BEC_ZONE VARCHAR2(4),
	BEC_SUBZONE VARCHAR2(3),
	VARIANT VARCHAR2(1),
	BEC_VERSION_ID NUMBER(10,0),
	CONSTRAINT ORCHARD_PK PRIMARY KEY (ORCHARD_ID),
	CONSTRAINT SYS_C0015891 CHECK ("ORCHARD_ID" IS NOT NULL),
	CONSTRAINT SYS_C0015892 CHECK ("ORCHARD_LOT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0015893 CHECK ("CLIENT_NUMBER" IS NOT NULL),
	CONSTRAINT SYS_C0015894 CHECK ("CLIENT_LOCN_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0015895 CHECK ("REVISION_COUNT" IS NOT NULL)
);
-- CREATE UNIQUE INDEX ORCHARD_PK ON THE.ORCHARD (ORCHARD_ID);

-- THE.POLLEN_CONTAMINATION_MTHD_CODE definition
CREATE TABLE THE.POLLEN_CONTAMINATION_MTHD_CODE (
	POLLEN_CONTAMINATION_MTHD_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT PCMC_PK PRIMARY KEY (POLLEN_CONTAMINATION_MTHD_CODE),
	CONSTRAINT SYS_C0029017 CHECK ("POLLEN_CONTAMINATION_MTHD_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0029018 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0029019 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0029020 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0029022 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX PCMC_PK ON THE.POLLEN_CONTAMINATION_MTHD_CODE (POLLEN_CONTAMINATION_MTHD_CODE);

-- THE.SEED_COAST_AREA_CODE definition
CREATE TABLE THE.SEED_COAST_AREA_CODE (
	SEED_COAST_AREA_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SEED_COAST_AREA_CODE_PK PRIMARY KEY (SEED_COAST_AREA_CODE),
	CONSTRAINT SYS_C0026489 CHECK ("SEED_COAST_AREA_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0026490 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0026491 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026492 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026493 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX SEED_COAST_AREA_CODE_PK ON THE.SEED_COAST_AREA_CODE (SEED_COAST_AREA_CODE);

-- THE.SEED_PLAN_UNIT definition
CREATE TABLE THE.SEED_PLAN_UNIT (
	SEED_PLAN_UNIT_ID NUMBER(10,0),
	PRIMARY_IND VARCHAR2(1),
	SEED_PLAN_ZONE_ID NUMBER(10,0),
	ELEVATION_BAND VARCHAR2(10),
	ELEVATION_MAX NUMBER(5,0),
	ELEVATION_MIN NUMBER(5,0),
	CREATE_DATE DATE,
	LATITUDE_BAND VARCHAR2(5),
	LATITUDE_DEGREES_MIN NUMBER(2,0),
	LATITUDE_MINUTES_MIN NUMBER(2,0),
	LATITUDE_DEGREES_MAX NUMBER(2,0),
	LATITUDE_MINUTES_MAX NUMBER(2,0),
	PROGRAM_RANK NUMBER(3,0),
	TOTAL_SEEDLING_REQUIREMENTS NUMBER(5,0),
	UPDATE_DATE DATE,
	REVISION_COUNT NUMBER(5,0),
	CONSTRAINT SPU_PK PRIMARY KEY (SEED_PLAN_UNIT_ID),
	CONSTRAINT SYS_C0028926 CHECK ("SEED_PLAN_UNIT_ID" IS NOT NULL),
	CONSTRAINT SYS_C0028927 CHECK ("PRIMARY_IND" IS NOT NULL),
	CONSTRAINT SYS_C0028928 CHECK ("SEED_PLAN_ZONE_ID" IS NOT NULL),
	CONSTRAINT SYS_C0028929 CHECK ("ELEVATION_BAND" IS NOT NULL),
	CONSTRAINT SYS_C0028930 CHECK ("ELEVATION_MAX" IS NOT NULL),
	CONSTRAINT SYS_C0028931 CHECK ("ELEVATION_MIN" IS NOT NULL),
	CONSTRAINT SYS_C0028932 CHECK ("REVISION_COUNT" IS NOT NULL)
);
CREATE INDEX SPU_EB_FK_I ON THE.SEED_PLAN_UNIT (ELEVATION_BAND);
CREATE INDEX SPU_LB_FK_I ON THE.SEED_PLAN_UNIT (LATITUDE_BAND);
-- CREATE UNIQUE INDEX SPU_PK ON THE.SEED_PLAN_UNIT (SEED_PLAN_UNIT_ID);
CREATE INDEX SPU_SPZS_FK_I ON THE.SEED_PLAN_UNIT (SEED_PLAN_ZONE_ID);


-- THE.SEED_PLAN_ZONE_CODE definition
CREATE TABLE THE.SEED_PLAN_ZONE_CODE (
	SEED_PLAN_ZONE_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SEED_PLAN_ZONE_CODE_PK PRIMARY KEY (SEED_PLAN_ZONE_CODE),
	CONSTRAINT SYS_C0027005 CHECK ("SEED_PLAN_ZONE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0027006 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0027007 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027008 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027009 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX SEED_PLAN_ZONE_CODE_PK ON THE.SEED_PLAN_ZONE_CODE (SEED_PLAN_ZONE_CODE);


-- THE.SEEDLOT_STATUS_CODE definition
CREATE TABLE THE.SEEDLOT_STATUS_CODE (
	SEEDLOT_STATUS_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SEEDLOT_STATUS_CODE_PK PRIMARY KEY (SEEDLOT_STATUS_CODE),
	CONSTRAINT SYS_C0026804 CHECK ("SEEDLOT_STATUS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0026805 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0026806 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026807 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026808 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX SEEDLOT_STATUS_CODE_PK ON THE.SEEDLOT_STATUS_CODE (SEEDLOT_STATUS_CODE);

-- THE.SEEDLOT_SOURCE_CODE definition
CREATE TABLE THE.SEEDLOT_SOURCE_CODE (
	SEEDLOT_SOURCE_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SSCD_PK PRIMARY KEY (SEEDLOT_SOURCE_CODE),
	CONSTRAINT SYS_C0029043 CHECK ("SEEDLOT_SOURCE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0029044 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0029045 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0029046 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0029047 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX SSCD_PK ON THE.SEEDLOT_SOURCE_CODE (SEEDLOT_SOURCE_CODE);

-- THE.GENETIC_WORTH_CODE definition
CREATE TABLE THE.GENETIC_WORTH_CODE (
	GENETIC_WORTH_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT GENETIC_WORTH_CODE_PK PRIMARY KEY (GENETIC_WORTH_CODE),
	CONSTRAINT SYS_C0026498 CHECK ("GENETIC_WORTH_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0026499 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0026500 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026501 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026502 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
-- CREATE UNIQUE INDEX GENETIC_WORTH_CODE_PK ON THE.GENETIC_WORTH_CODE (GENETIC_WORTH_CODE);

-- THE.VEGETATION_CODE definition
CREATE TABLE THE.VEGETATION_CODE (
	VEGETATION_CODE VARCHAR2(8),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SYS_C0026874 CHECK ("VEGETATION_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0026875 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0026876 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026877 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0026878 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL),
	CONSTRAINT VEGETATION_CODE_PK PRIMARY KEY (VEGETATION_CODE)
);
-- CREATE UNIQUE INDEX VEGETATION_CODE_PK ON THE.VEGETATION_CODE (VEGETATION_CODE);

-- THE.SUPERIOR_PROVENANCE definition
CREATE TABLE THE.SUPERIOR_PROVENANCE (
	PROVENANCE_ID NUMBER(5,0),
	PROVENANCE_DESCRIPTION VARCHAR2(120),
	VEGETATION_CODE VARCHAR2(8),
	COLLECTION_ELEVATION_MIN NUMBER(5,0),
	COLLECTION_ELEVATION_MAX NUMBER(5,0),
	COLLECTION_LATITUDE_DEGREES NUMBER(2,0),
	COLLECTION_LATITUDE_MINUTES NUMBER(2,0),
	COLLECTION_LONGITUDE_DEGREES NUMBER(3,0),
	COLLECTION_LONGITUDE_MINUTES NUMBER(2,0),
	ADDITIONAL_CRITERIA VARCHAR2(500),
	GENETIC_WORTH_CODE VARCHAR2(3),
	GENETIC_WORTH_RATING NUMBER(2,0),
	LIMIT_UP_ELEVATION NUMBER(5,0),
	LIMIT_DOWN_ELEVATION NUMBER(5,0),
	LIMIT_ELEVATION_MIN NUMBER(5,0),
	LIMIT_ELEVATION_MAX NUMBER(5,0),
	LIMIT_LATITUDE_MIN_DEGREES NUMBER(2,0),
	LIMIT_LATITUDE_MIN_MINUTES NUMBER(2,0),
	LIMIT_LATITUDE_MAX_DEGREES NUMBER(2,0),
	LIMIT_LATITUDE_MAX_MINUTES NUMBER(2,0),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SUPR_PK PRIMARY KEY (PROVENANCE_ID),
	CONSTRAINT SYS_C0029072 CHECK ("PROVENANCE_ID" IS NOT NULL),
	CONSTRAINT SYS_C0029073 CHECK ("PROVENANCE_DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0029074 CHECK ("VEGETATION_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0029075 CHECK ("COLLECTION_ELEVATION_MIN" IS NOT NULL),
	CONSTRAINT SYS_C0029076 CHECK ("COLLECTION_ELEVATION_MAX" IS NOT NULL),
	CONSTRAINT SYS_C0029077 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0029078 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0029080 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
CREATE INDEX SUPR_GWC_FK_I ON THE.SUPERIOR_PROVENANCE (GENETIC_WORTH_CODE);
-- CREATE UNIQUE INDEX SUPR_PK ON THE.SUPERIOR_PROVENANCE (PROVENANCE_ID);
CREATE INDEX SUPR_VC_FK_I ON THE.SUPERIOR_PROVENANCE (VEGETATION_CODE);

-- THE.SUPERIOR_PROVENANCE foreign keys
ALTER TABLE THE.SUPERIOR_PROVENANCE ADD CONSTRAINT SUPR_GWC_FK FOREIGN KEY (GENETIC_WORTH_CODE) REFERENCES THE.GENETIC_WORTH_CODE(GENETIC_WORTH_CODE);
ALTER TABLE THE.SUPERIOR_PROVENANCE ADD CONSTRAINT SUPR_VC_FK FOREIGN KEY (VEGETATION_CODE) REFERENCES THE.VEGETATION_CODE(VEGETATION_CODE);
